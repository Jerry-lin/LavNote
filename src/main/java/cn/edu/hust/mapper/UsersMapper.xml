<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.hust.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="cn.edu.hust.domain.Users">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="firstname" jdbcType="VARCHAR" property="firstname" />
    <result column="lastname" jdbcType="VARCHAR" property="lastname" />
    <result column="is_admin" jdbcType="TINYINT" property="is_admin" />
    <result column="remember_token" jdbcType="VARCHAR" property="remember_token" />
    <result column="created_at" jdbcType="TIMESTAMP" property="created_at" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updated_at" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deleted_at" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, firstname, lastname, is_admin, remember_token, created_at, 
    updated_at, deleted_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from users
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="cn.edu.hust.domain.Users">
    insert into users (id, username, password, 
      firstname, lastname, is_admin, 
      remember_token, created_at, updated_at, 
      deleted_at)
    values (#{id,jdbcType=CHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{firstname,jdbcType=VARCHAR}, #{lastname,jdbcType=VARCHAR}, #{is_admin,jdbcType=TINYINT}, 
      #{remember_token,jdbcType=VARCHAR}, #{created_at,jdbcType=TIMESTAMP}, #{updated_at,jdbcType=TIMESTAMP}, 
      #{deleted_at,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.hust.domain.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="firstname != null">
        firstname,
      </if>
      <if test="lastname != null">
        lastname,
      </if>
      <if test="is_admin != null">
        is_admin,
      </if>
      <if test="remember_token != null">
        remember_token,
      </if>
      <if test="created_at != null">
        created_at,
      </if>
      <if test="updated_at != null">
        updated_at,
      </if>
      <if test="deleted_at != null">
        deleted_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="firstname != null">
        #{firstname,jdbcType=VARCHAR},
      </if>
      <if test="lastname != null">
        #{lastname,jdbcType=VARCHAR},
      </if>
      <if test="is_admin != null">
        #{is_admin,jdbcType=TINYINT},
      </if>
      <if test="remember_token != null">
        #{remember_token,jdbcType=VARCHAR},
      </if>
      <if test="created_at != null">
        #{created_at,jdbcType=TIMESTAMP},
      </if>
      <if test="updated_at != null">
        #{updated_at,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted_at != null">
        #{deleted_at,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.hust.domain.Users">
    update users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="firstname != null">
        firstname = #{firstname,jdbcType=VARCHAR},
      </if>
      <if test="lastname != null">
        lastname = #{lastname,jdbcType=VARCHAR},
      </if>
      <if test="is_admin != null">
        is_admin = #{is_admin,jdbcType=TINYINT},
      </if>
      <if test="remember_token != null">
        remember_token = #{remember_token,jdbcType=VARCHAR},
      </if>
      <if test="created_at != null">
        created_at = #{created_at,jdbcType=TIMESTAMP},
      </if>
      <if test="updated_at != null">
        updated_at = #{updated_at,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted_at != null">
        deleted_at = #{deleted_at,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.hust.domain.Users">
    update users
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      firstname = #{firstname,jdbcType=VARCHAR},
      lastname = #{lastname,jdbcType=VARCHAR},
      is_admin = #{is_admin,jdbcType=TINYINT},
      remember_token = #{remember_token,jdbcType=VARCHAR},
      created_at = #{created_at,jdbcType=TIMESTAMP},
      updated_at = #{updated_at,jdbcType=TIMESTAMP},
      deleted_at = #{deleted_at,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=CHAR}
  </update>

  <select id="findUsersByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
      SELECT *from users where username = #{username,jdbcType=VARCHAR}
  </select>

  <insert id="insertUser" parameterType="cn.edu.hust.domain.Users">
      insert into users(id, username, password, firstname, lastname, is_admin, remember_token, created_at, updated_at, deleted_at)
      VALUES (#{id,jdbcType=CHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{firstname,jdbcType=VARCHAR}, #{lastname,jdbcType=VARCHAR}, #{is_admin,jdbcType=TINYINT},
      #{remember_tokented_at,jdbcType=VARCHAR}, #{created_at,jdbcType=TIMESTAMP}, #{updated_at,jdbcType=TIMESTAMP},
      #{deleted_at,jdbcType=TIMESTAMP})
  </insert>

</mapper>